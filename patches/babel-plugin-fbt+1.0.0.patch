diff --git a/node_modules/babel-plugin-fbt/dist/bin/FbtCollector.js b/node_modules/babel-plugin-fbt/dist/bin/FbtCollector.js
index 52d9490..f5e6cd5 100644
--- a/node_modules/babel-plugin-fbt/dist/bin/FbtCollector.js
+++ b/node_modules/babel-plugin-fbt/dist/bin/FbtCollector.js
@@ -40,6 +40,11 @@ class FbtCollector {
   }
 
   collectFromOneFile(source, filename, fbtEnumManifest) {
+    if (filename.endsWith('.html')) {
+      const htmlCalls = source.match(/{{\s*(.+?)\s*}}/g).join(';\n');
+      source = `const fbt = require('fbt');\n${htmlCalls}`;
+    }
+
     const options = {
       collectFbt: true,
       extraOptions: this._extraOptions,
diff --git a/node_modules/babel-plugin-fbt/dist/bin/manifestUtils.js b/node_modules/babel-plugin-fbt/dist/bin/manifestUtils.js
index 894e8e3..44a4410 100644
--- a/node_modules/babel-plugin-fbt/dist/bin/manifestUtils.js
+++ b/node_modules/babel-plugin-fbt/dist/bin/manifestUtils.js
@@ -23,7 +23,7 @@ const invariant = require('invariant');
 
 const path = require('path');
 
-const FILE_EXT = '.@(js|jsx|ts|tsx)';
+const FILE_EXT = '.@(js|jsx|ts|tsx|html)';
 
 function generateManifest(enumManifestPath, srcPaths, cwd = process.cwd()) {
   // Register babel-plugins with node to enable parsing flow types, etc.
